<?xml version="1.0" encoding="utf-8" ?>
<grammar>
  <production>
    <nonterminal>namespace-name</nonterminal>
    <expression>
      <nonterminal>namespace-or-type-name</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>type-name</nonterminal>
    <expression>
      <nonterminal>namespace-or-type-name</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-or-type-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>namespace-or-type-name</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>qualified-alias-member</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>value-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>reference-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-parameter</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>value-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>struct-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>enum-type</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>struct-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>simple-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>nullable-type</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>simple-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>numeric-type</nonterminal>
        </expression>
        <expression>
          <terminal>bool</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>numeric-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>integral-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>floating-point-type</nonterminal>
        </expression>
        <expression>
          <terminal>decimal</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>integral-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>sbyte</terminal>
        </expression>
        <expression>
          <terminal>byte</terminal>
        </expression>
        <expression>
          <terminal>short</terminal>
        </expression>
        <expression>
          <terminal>ushort</terminal>
        </expression>
        <expression>
          <terminal>int</terminal>
        </expression>
        <expression>
          <terminal>uint</terminal>
        </expression>
        <expression>
          <terminal>long</terminal>
        </expression>
        <expression>
          <terminal>ulong</terminal>
        </expression>
        <expression>
          <terminal>char</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>floating-point-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>float</terminal>
        </expression>
        <expression>
          <terminal>double</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>nullable-type</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>non-nullable-value-type</nonterminal>
        </expression>
        <expression>
          <terminal>?</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>non-nullable-value-type</nonterminal>
    <expression>
      <nonterminal>type</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>enum-type</nonterminal>
    <expression>
      <nonterminal>type-name</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>reference-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>interface-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>array-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>delegate-type</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type-name</nonterminal>
        </expression>
        <expression>
          <terminal>object</terminal>
        </expression>
        <expression>
          <terminal>dynamic</terminal>
        </expression>
        <expression>
          <terminal>string</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-type</nonterminal>
    <expression>
      <nonterminal>type-name</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>rank-specifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>rank-specifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>rank-specifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>rank-specifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>rank-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>[</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>dim-separators</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>]</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>dim-separators</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>,</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>dim-separators</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>delegate-type</nonterminal>
    <expression>
      <nonterminal>type-name</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>type-argument-list</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <nonterminal>type-arguments</nonterminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>type-arguments</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type-argument</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-arguments</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>type-argument</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-argument</nonterminal>
    <expression>
      <nonterminal>type</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameter</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>variable-reference</nonterminal>
    <expression>
      <nonterminal>expression</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>argument-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>argument</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>argument</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>argument</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>argument-name</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>argument-value</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>argument-name</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>:</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>argument-value</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>ref</terminal>
            </expression>
            <expression>
              <nonterminal>variable-reference</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>out</terminal>
            </expression>
            <expression>
              <nonterminal>variable-reference</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>primary-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>primary-no-array-creation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>array-creation-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>primary-no-array-creation-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>literal</nonterminal>
        </expression>
        <expression>
          <nonterminal>simple-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>parenthesized-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>member-access</nonterminal>
        </expression>
        <expression>
          <nonterminal>invocation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>element-access</nonterminal>
        </expression>
        <expression>
          <nonterminal>this-access</nonterminal>
        </expression>
        <expression>
          <nonterminal>base-access</nonterminal>
        </expression>
        <expression>
          <nonterminal>post-increment-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>post-decrement-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>object-creation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>delegate-creation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>anonymous-object-creation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>typeof-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>checked-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>unchecked-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>default-value-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>anonymous-method-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>simple-name</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type-argument-list</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>parenthesized-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>member-access</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>primary-expression</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>predefined-type</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>qualified-alias-member</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>predefined-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>bool</terminal>
        </expression>
        <expression>
          <terminal>byte</terminal>
        </expression>
        <expression>
          <terminal>char</terminal>
        </expression>
        <expression>
          <terminal>decimal</terminal>
        </expression>
        <expression>
          <terminal>double</terminal>
        </expression>
        <expression>
          <terminal>float</terminal>
        </expression>
        <expression>
          <terminal>int</terminal>
        </expression>
        <expression>
          <terminal>long</terminal>
        </expression>
        <expression>
          <terminal>object</terminal>
        </expression>
        <expression>
          <terminal>sbyte</terminal>
        </expression>
        <expression>
          <terminal>short</terminal>
        </expression>
        <expression>
          <terminal>string</terminal>
        </expression>
        <expression>
          <terminal>uint</terminal>
        </expression>
        <expression>
          <terminal>ulong</terminal>
        </expression>
        <expression>
          <terminal>ushort</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>invocation-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>primary-expression</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>argument-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>element-access</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>primary-no-array-creation-expression</nonterminal>
        </expression>
        <expression>
          <terminal>[</terminal>
        </expression>
        <expression>
          <nonterminal>argument-list</nonterminal>
        </expression>
        <expression>
          <terminal>]</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>this-access</nonterminal>
    <expression>
      <terminal>this</terminal>
    </expression>
  </production>
  <production>
    <nonterminal>base-access</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>base</terminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>base</terminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>post-increment-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>primary-expression</nonterminal>
        </expression>
        <expression>
          <terminal>++</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>post-decrement-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>primary-expression</nonterminal>
        </expression>
        <expression>
          <terminal>--</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>object-creation-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>object-or-collection-initializer</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <nonterminal>object-or-collection-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>object-or-collection-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>object-initializer</nonterminal>
        </expression>
        <expression>
          <nonterminal>collection-initializer</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>object-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>member-initializer-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>member-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-initializer-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>member-initializer</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>member-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>member-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-initializer</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>initializer-value</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>initializer-value</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>object-or-collection-initializer</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>collection-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>element-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>element-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>element-initializer-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>element-initializer</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>element-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>element-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>element-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>non-assignment-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>expression-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>array-creation-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <nonterminal>non-array-type</nonterminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>rank-specifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>array-initializer</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <nonterminal>array-type</nonterminal>
            </expression>
            <expression>
              <nonterminal>array-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <nonterminal>rank-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>array-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>delegate-creation-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <nonterminal>delegate-type</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>anonymous-object-creation-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <nonterminal>anonymous-object-initializer</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>anonymous-object-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>member-declarator-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>member-declarator-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-declarator-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>member-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>member-declarator-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>member-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>simple-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>member-access</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>typeof-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>typeof</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typeof</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>unbound-type-name</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typeof</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <terminal>void</terminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>unbound-type-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>generic-dimension-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>generic-dimension-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>unbound-type-name</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>generic-dimension-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>generic-dimension-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>commas</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>commas</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>,</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>commas</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>checked-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>checked</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>unchecked-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>unchecked</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>default-value-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>default</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>unary-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>primary-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>+</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>-</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>!</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>~</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>pre-increment-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>pre-decrement-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>cast-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>pre-increment-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>++</terminal>
        </expression>
        <expression>
          <nonterminal>unary-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>pre-decrement-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>--</terminal>
        </expression>
        <expression>
          <nonterminal>unary-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>cast-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>unary-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>multiplicative-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>unary-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
            <expression>
              <terminal>*</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
            <expression>
              <terminal>/</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
            <expression>
              <terminal>%</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>additive-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>multiplicative-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
            <expression>
              <terminal>+</terminal>
            </expression>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
            <expression>
              <terminal>-</terminal>
            </expression>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>shift-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>additive-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&lt;&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
            <expression>
              <nonterminal>right-shift</nonterminal>
            </expression>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>relational-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>shift-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&lt;=</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;=</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>is</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>as</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>equality-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>relational-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>equality-expression</nonterminal>
            </expression>
            <expression>
              <terminal>==</terminal>
            </expression>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>equality-expression</nonterminal>
            </expression>
            <expression>
              <terminal>!=</terminal>
            </expression>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>and-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>equality-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>and-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&amp;</terminal>
            </expression>
            <expression>
              <nonterminal>equality-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>exclusive-or-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>and-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>exclusive-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>^</terminal>
            </expression>
            <expression>
              <nonterminal>and-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>inclusive-or-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>exclusive-or-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>inclusive-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>|</terminal>
            </expression>
            <expression>
              <nonterminal>exclusive-or-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>conditional-and-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>inclusive-or-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>conditional-and-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&amp;&amp;</terminal>
            </expression>
            <expression>
              <nonterminal>inclusive-or-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>conditional-or-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>conditional-and-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>conditional-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>||</terminal>
            </expression>
            <expression>
              <nonterminal>conditional-and-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>null-coalescing-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>conditional-or-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>conditional-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>??</terminal>
            </expression>
            <expression>
              <nonterminal>null-coalescing-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>conditional-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>null-coalescing-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>null-coalescing-expression</nonterminal>
            </expression>
            <expression>
              <terminal>?</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>lambda-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>anonymous-function-signature</nonterminal>
        </expression>
        <expression>
          <terminal>=&gt;</terminal>
        </expression>
        <expression>
          <nonterminal>anonymous-function-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>anonymous-method-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>delegate</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>explicit-anonymous-function-signature</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>anonymous-function-signature</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>explicit-anonymous-function-signature</nonterminal>
        </expression>
        <expression>
          <nonterminal>implicit-anonymous-function-signature</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>explicit-anonymous-function-signature</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>explicit-anonymous-function-parameter-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>explicit-anonymous-function-parameter-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>explicit-anonymous-function-parameter</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>explicit-anonymous-function-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>explicit-anonymous-function-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>explicit-anonymous-function-parameter</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>anonymous-function-parameter-modifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>anonymous-function-parameter-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>ref</terminal>
        </expression>
        <expression>
          <terminal>out</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>implicit-anonymous-function-signature</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>implicit-anonymous-function-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>implicit-anonymous-function-parameter</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>implicit-anonymous-function-parameter-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>implicit-anonymous-function-parameter</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>implicit-anonymous-function-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>implicit-anonymous-function-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>implicit-anonymous-function-parameter</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>anonymous-function-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>query-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>from-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>query-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>from-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>from</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>in</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>query-body</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>query-body-clauses</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>select-or-group-clause</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>query-continuation</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>query-body-clauses</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>query-body-clause</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>query-body-clauses</nonterminal>
            </expression>
            <expression>
              <nonterminal>query-body-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>query-body-clause</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>from-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>let-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>where-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>join-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>join-into-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>orderby-clause</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>let-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>let</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>where-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>where</terminal>
        </expression>
        <expression>
          <nonterminal>boolean-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>join-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>join</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>in</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>on</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>equals</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>join-into-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>join</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>in</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>on</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>equals</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>into</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>orderby-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>orderby</terminal>
        </expression>
        <expression>
          <nonterminal>orderings</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>orderings</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>ordering</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>orderings</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>ordering</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>ordering</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>ordering-direction</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>ordering-direction</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>ascending</terminal>
        </expression>
        <expression>
          <terminal>descending</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>select-or-group-clause</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>select-clause</nonterminal>
        </expression>
        <expression>
          <nonterminal>group-clause</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>select-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>select</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>group-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>group</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>by</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>query-continuation</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>into</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>query-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>assignment</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>unary-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>assignment-operator</nonterminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>assignment-operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <terminal>+=</terminal>
        </expression>
        <expression>
          <terminal>-=</terminal>
        </expression>
        <expression>
          <terminal>*=</terminal>
        </expression>
        <expression>
          <terminal>/=</terminal>
        </expression>
        <expression>
          <terminal>%=</terminal>
        </expression>
        <expression>
          <terminal>&amp;=</terminal>
        </expression>
        <expression>
          <terminal>|=</terminal>
        </expression>
        <expression>
          <terminal>^=</terminal>
        </expression>
        <expression>
          <terminal>&lt;&lt;=</terminal>
        </expression>
        <expression>
          <nonterminal>right-shift-assignment</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>non-assignment-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>assignment</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>non-assignment-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>conditional-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>lambda-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>query-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constant-expression</nonterminal>
    <expression>
      <nonterminal>expression</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>boolean-expression</nonterminal>
    <expression>
      <nonterminal>expression</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>labeled-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>declaration-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>embedded-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <nonterminal>empty-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>expression-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>selection-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>iteration-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>jump-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>try-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>checked-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>unchecked-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>lock-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>using-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>yield-statement</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>block</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>statement-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>statement-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>statement</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>statement-list</nonterminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>empty-statement</nonterminal>
    <expression>
      <terminal>;</terminal>
    </expression>
  </production>
  <production>
    <nonterminal>labeled-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>declaration-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>local-variable-declaration</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>local-constant-declaration</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>local-variable-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>local-variable-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>local-variable-declarators</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>local-variable-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>var</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>local-variable-declarators</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>local-variable-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>local-variable-declarators</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>local-variable-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>local-variable-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>local-variable-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>local-variable-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>array-initializer</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>local-constant-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>const</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>constant-declarators</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>constant-declarators</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>constant-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>constant-declarators</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>constant-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constant-declarator</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>constant-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>expression-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>statement-expression</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>statement-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>invocation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>object-creation-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>assignment</nonterminal>
        </expression>
        <expression>
          <nonterminal>post-increment-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>post-decrement-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>pre-increment-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>pre-decrement-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>selection-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>if-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>switch-statement</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>if-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>if</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>boolean-expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>embedded-statement</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>if</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>boolean-expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>embedded-statement</nonterminal>
            </expression>
            <expression>
              <terminal>else</terminal>
            </expression>
            <expression>
              <nonterminal>embedded-statement</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>switch-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>switch</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>switch-block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>switch-block</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>switch-sections</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>switch-sections</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>switch-section</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>switch-sections</nonterminal>
            </expression>
            <expression>
              <nonterminal>switch-section</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>switch-section</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>switch-labels</nonterminal>
        </expression>
        <expression>
          <nonterminal>statement-list</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>switch-labels</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>switch-label</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>switch-labels</nonterminal>
            </expression>
            <expression>
              <nonterminal>switch-label</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>switch-label</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>case</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>default</terminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>iteration-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>while-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>do-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>for-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>foreach-statement</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>while-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>while</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>boolean-expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>do-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>do</terminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
        <expression>
          <terminal>while</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>boolean-expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>for-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>for</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>for-initializer</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>for-condition</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>for-iterator</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>for-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>local-variable-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>statement-expression-list</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>for-condition</nonterminal>
    <expression>
      <nonterminal>boolean-expression</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>for-iterator</nonterminal>
    <expression>
      <nonterminal>statement-expression-list</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>statement-expression-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>statement-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>statement-expression-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>statement-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>foreach-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>foreach</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>local-variable-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>in</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>jump-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>break-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>continue-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>goto-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>return-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>throw-statement</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>break-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>break</terminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>continue-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>continue</terminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>goto-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>goto</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>goto</terminal>
            </expression>
            <expression>
              <terminal>case</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>goto</terminal>
            </expression>
            <expression>
              <terminal>default</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>return-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>return</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>throw-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>throw</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>try-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>try</terminal>
            </expression>
            <expression>
              <nonterminal>block</nonterminal>
            </expression>
            <expression>
              <nonterminal>catch-clauses</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>try</terminal>
            </expression>
            <expression>
              <nonterminal>block</nonterminal>
            </expression>
            <expression>
              <nonterminal>finally-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>try</terminal>
            </expression>
            <expression>
              <nonterminal>block</nonterminal>
            </expression>
            <expression>
              <nonterminal>catch-clauses</nonterminal>
            </expression>
            <expression>
              <nonterminal>finally-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>catch-clauses</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>specific-catch-clauses</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>general-catch-clause</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>specific-catch-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>general-catch-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>specific-catch-clauses</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>specific-catch-clause</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>specific-catch-clauses</nonterminal>
            </expression>
            <expression>
              <nonterminal>specific-catch-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>specific-catch-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>catch</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>class-type</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>general-catch-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>catch</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>finally-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>finally</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>checked-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>checked</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>unchecked-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>unchecked</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>lock-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>lock</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>using-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>using</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>resource-acquisition</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>embedded-statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>resource-acquisition</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>local-variable-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>yield-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>yield</terminal>
            </expression>
            <expression>
              <terminal>return</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>yield</terminal>
            </expression>
            <expression>
              <terminal>break</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>compilation-unit</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>extern-alias-directives</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>using-directives</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>global-attributes</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>namespace-member-declarations</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <nonterminal>qualified-identifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>namespace-body</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>;</terminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>qualified-identifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>qualified-identifier</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-body</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>extern-alias-directives</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>using-directives</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>namespace-member-declarations</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>extern-alias-directives</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>extern-alias-directive</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>extern-alias-directives</nonterminal>
            </expression>
            <expression>
              <nonterminal>extern-alias-directive</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>extern-alias-directive</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>extern</terminal>
        </expression>
        <expression>
          <terminal>alias</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>using-directives</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>using-directive</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>using-directives</nonterminal>
            </expression>
            <expression>
              <nonterminal>using-directive</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>using-directive</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>using-alias-directive</nonterminal>
        </expression>
        <expression>
          <nonterminal>using-namespace-directive</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>using-alias-directive</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>using</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>namespace-or-type-name</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>using-namespace-directive</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>using</terminal>
        </expression>
        <expression>
          <nonterminal>namespace-name</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-member-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>namespace-member-declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>namespace-member-declarations</nonterminal>
            </expression>
            <expression>
              <nonterminal>namespace-member-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-member-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>namespace-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>struct-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>interface-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>enum-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>delegate-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>qualified-alias-member</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>::</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type-argument-list</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>class-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>class-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>partial</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>class</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>class-base</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-constraints-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>class-body</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>;</terminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>class-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>abstract</terminal>
        </expression>
        <expression>
          <terminal>sealed</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameter-list</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <nonterminal>type-parameters</nonterminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameters</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-parameters</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-base</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>class-type</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>interface-type-list</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>class-type</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>interface-type-list</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-type-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>interface-type</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>interface-type-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>interface-type</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameter-constraints-clauses</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type-parameter-constraints-clause</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-parameter-constraints-clauses</nonterminal>
            </expression>
            <expression>
              <nonterminal>type-parameter-constraints-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameter-constraints-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>where</terminal>
        </expression>
        <expression>
          <nonterminal>type-parameter</nonterminal>
        </expression>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>type-parameter-constraints</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameter-constraints</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>primary-constraint</nonterminal>
        </expression>
        <expression>
          <nonterminal>secondary-constraints</nonterminal>
        </expression>
        <expression>
          <nonterminal>constructor-constraint</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>primary-constraint</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>secondary-constraints</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>primary-constraint</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>constructor-constraint</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>secondary-constraints</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>constructor-constraint</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>primary-constraint</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>secondary-constraints</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>constructor-constraint</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>primary-constraint</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-type</nonterminal>
        </expression>
        <expression>
          <terminal>class</terminal>
        </expression>
        <expression>
          <terminal>struct</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>secondary-constraints</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>interface-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-parameter</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>secondary-constraints</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>interface-type</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>secondary-constraints</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>type-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-constraint</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>class-body</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>class-member-declarations</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>class-member-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-member-declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-member-declarations</nonterminal>
            </expression>
            <expression>
              <nonterminal>class-member-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-member-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>constant-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>field-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>method-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>property-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>event-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>indexer-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>operator-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>constructor-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>destructor-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>static-constructor-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constant-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>constant-modifiers</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>const</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>constant-declarators</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>constant-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>constant-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>constant-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>constant-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constant-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>field-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>field-modifiers</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>variable-declarators</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>field-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>field-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>field-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>field-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>field-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>readonly</terminal>
        </expression>
        <expression>
          <terminal>volatile</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>variable-declarators</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>variable-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>variable-declarators</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>variable-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>variable-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>variable-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>variable-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>array-initializer</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>method-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>method-header</nonterminal>
        </expression>
        <expression>
          <nonterminal>method-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>method-header</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>method-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>partial</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>return-type</nonterminal>
            </expression>
            <expression>
              <nonterminal>member-name</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>formal-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-constraints-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>method-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>method-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>method-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>method-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>method-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>virtual</terminal>
        </expression>
        <expression>
          <terminal>sealed</terminal>
        </expression>
        <expression>
          <terminal>override</terminal>
        </expression>
        <expression>
          <terminal>abstract</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>return-type</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>void</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>interface-type</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>method-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>formal-parameter-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>fixed-parameters</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>fixed-parameters</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>parameter-array</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>parameter-array</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>fixed-parameters</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>fixed-parameter</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>fixed-parameters</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>fixed-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>fixed-parameter</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>parameter-modifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>default-argument</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>default-argument</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>parameter-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>ref</terminal>
        </expression>
        <expression>
          <terminal>out</terminal>
        </expression>
        <expression>
          <terminal>this</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>parameter-array</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>params</terminal>
        </expression>
        <expression>
          <nonterminal>array-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>property-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>property-modifiers</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>member-name</nonterminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>accessor-declarations</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>property-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>property-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>property-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>property-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>property-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>virtual</terminal>
        </expression>
        <expression>
          <terminal>sealed</terminal>
        </expression>
        <expression>
          <terminal>override</terminal>
        </expression>
        <expression>
          <terminal>abstract</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>accessor-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>get-accessor-declaration</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>set-accessor-declaration</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>set-accessor-declaration</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>get-accessor-declaration</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>get-accessor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>accessor-modifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>get</terminal>
        </expression>
        <expression>
          <nonterminal>accessor-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>set-accessor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>accessor-modifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>set</terminal>
        </expression>
        <expression>
          <nonterminal>accessor-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>accessor-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>protected</terminal>
            </expression>
            <expression>
              <terminal>internal</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>internal</terminal>
            </expression>
            <expression>
              <terminal>protected</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>accessor-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>event-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>event-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>event</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <nonterminal>variable-declarators</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>event-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>event</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <nonterminal>member-name</nonterminal>
            </expression>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>event-accessor-declarations</nonterminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>event-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>event-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>event-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>event-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>event-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>virtual</terminal>
        </expression>
        <expression>
          <terminal>sealed</terminal>
        </expression>
        <expression>
          <terminal>override</terminal>
        </expression>
        <expression>
          <terminal>abstract</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>event-accessor-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>add-accessor-declaration</nonterminal>
            </expression>
            <expression>
              <nonterminal>remove-accessor-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>remove-accessor-declaration</nonterminal>
            </expression>
            <expression>
              <nonterminal>add-accessor-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>add-accessor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>add</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>remove-accessor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>remove</terminal>
        </expression>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>indexer-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>indexer-modifiers</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>indexer-declarator</nonterminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>accessor-declarations</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>indexer-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>indexer-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>indexer-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>indexer-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>indexer-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>virtual</terminal>
        </expression>
        <expression>
          <terminal>sealed</terminal>
        </expression>
        <expression>
          <terminal>override</terminal>
        </expression>
        <expression>
          <terminal>abstract</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>indexer-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <terminal>this</terminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>formal-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <nonterminal>interface-type</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <terminal>this</terminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>formal-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>operator-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>operator-modifiers</nonterminal>
        </expression>
        <expression>
          <nonterminal>operator-declarator</nonterminal>
        </expression>
        <expression>
          <nonterminal>operator-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>operator-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>operator-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>operator-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>operator-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>operator-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>operator-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>unary-operator-declarator</nonterminal>
        </expression>
        <expression>
          <nonterminal>binary-operator-declarator</nonterminal>
        </expression>
        <expression>
          <nonterminal>conversion-operator-declarator</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>unary-operator-declarator</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>operator</terminal>
        </expression>
        <expression>
          <nonterminal>overloadable-unary-operator</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>overloadable-unary-operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>+</terminal>
        </expression>
        <expression>
          <terminal>-</terminal>
        </expression>
        <expression>
          <terminal>!</terminal>
        </expression>
        <expression>
          <terminal>~</terminal>
        </expression>
        <expression>
          <terminal>++</terminal>
        </expression>
        <expression>
          <terminal>--</terminal>
        </expression>
        <expression>
          <terminal>true</terminal>
        </expression>
        <expression>
          <terminal>false</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>binary-operator-declarator</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>operator</terminal>
        </expression>
        <expression>
          <nonterminal>overloadable-binary-operator</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>,</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>overloadable-binary-operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>+</terminal>
        </expression>
        <expression>
          <terminal>-</terminal>
        </expression>
        <expression>
          <terminal>*</terminal>
        </expression>
        <expression>
          <terminal>/</terminal>
        </expression>
        <expression>
          <terminal>%</terminal>
        </expression>
        <expression>
          <terminal>&amp;</terminal>
        </expression>
        <expression>
          <terminal>|</terminal>
        </expression>
        <expression>
          <terminal>^</terminal>
        </expression>
        <expression>
          <terminal>&lt;&lt;</terminal>
        </expression>
        <expression>
          <nonterminal>right-shift</nonterminal>
        </expression>
        <expression>
          <terminal>==</terminal>
        </expression>
        <expression>
          <terminal>!=</terminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <terminal>&gt;=</terminal>
        </expression>
        <expression>
          <terminal>&lt;=</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>conversion-operator-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>implicit</terminal>
            </expression>
            <expression>
              <terminal>operator</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>explicit</terminal>
            </expression>
            <expression>
              <terminal>operator</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type</nonterminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>operator-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>constructor-modifiers</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>constructor-declarator</nonterminal>
        </expression>
        <expression>
          <nonterminal>constructor-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>constructor-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>constructor-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>constructor-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-declarator</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>formal-parameter-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>constructor-initializer</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <terminal>base</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <terminal>this</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constructor-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>static-constructor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>static-constructor-modifiers</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>static-constructor-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>static-constructor-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>extern</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>static</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>static</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>extern</terminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>static-constructor-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>destructor-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>extern</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>~</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>destructor-body</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>destructor-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>struct-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>struct-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>partial</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>struct</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>struct-interfaces</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-constraints-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>struct-body</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>;</terminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>struct-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>struct-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>struct-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>struct-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>struct-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>struct-interfaces</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>interface-type-list</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>struct-body</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>struct-member-declarations</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>struct-member-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>struct-member-declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>struct-member-declarations</nonterminal>
            </expression>
            <expression>
              <nonterminal>struct-member-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>struct-member-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>constant-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>field-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>method-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>property-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>event-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>indexer-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>operator-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>constructor-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>static-constructor-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>array-type</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>non-array-type</nonterminal>
        </expression>
        <expression>
          <nonterminal>rank-specifiers</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>non-array-type</nonterminal>
    <expression>
      <nonterminal>type</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>array-initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>variable-initializer-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>variable-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>variable-initializer-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>variable-initializer</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>variable-initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>variable-initializer</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>interface-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>partial</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>interface</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>variant-type-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>interface-base</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-constraints-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>interface-body</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>;</terminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>interface-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>interface-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>interface-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>variant-type-parameter-list</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <nonterminal>variant-type-parameters</nonterminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>variant-type-parameters</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>variance-annotation</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>variant-type-parameters</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>variance-annotation</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>variance-annotation</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>in</terminal>
        </expression>
        <expression>
          <terminal>out</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-base</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>interface-type-list</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>interface-body</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>interface-member-declarations</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>interface-member-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>interface-member-declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>interface-member-declarations</nonterminal>
            </expression>
            <expression>
              <nonterminal>interface-member-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-member-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>interface-method-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>interface-property-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>interface-event-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>interface-indexer-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-method-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>new</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>return-type</nonterminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>type-parameter-list</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>formal-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-constraints-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-property-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>new</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>interface-accessors</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>interface-accessors</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>get</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>set</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>get</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>set</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>set</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>get</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>interface-event-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>new</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>event</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>interface-indexer-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>new</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
        <expression>
          <terminal>this</terminal>
        </expression>
        <expression>
          <terminal>[</terminal>
        </expression>
        <expression>
          <nonterminal>formal-parameter-list</nonterminal>
        </expression>
        <expression>
          <terminal>]</terminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>interface-accessors</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>enum-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>attributes</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>enum-modifiers</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>enum</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>enum-base</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>enum-body</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>;</terminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>enum-base</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>integral-type</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>enum-body</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>enum-member-declarations</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>enum-member-declarations</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enum-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>enum-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>enum-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>enum-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enum-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enum-member-declarations</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>enum-member-declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>enum-member-declarations</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>enum-member-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enum-member-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>delegate-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attributes</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>delegate-modifiers</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>delegate</terminal>
            </expression>
            <expression>
              <nonterminal>return-type</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>variant-type-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>formal-parameter-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>type-parameter-constraints-clauses</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>delegate-modifiers</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>delegate-modifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>delegate-modifiers</nonterminal>
            </expression>
            <expression>
              <nonterminal>delegate-modifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>delegate-modifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>global-attributes</nonterminal>
    <expression>
      <nonterminal>global-attribute-sections</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>global-attribute-sections</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>global-attribute-section</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>global-attribute-sections</nonterminal>
            </expression>
            <expression>
              <nonterminal>global-attribute-section</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>global-attribute-section</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>global-attribute-target-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>attribute-list</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>global-attribute-target-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>attribute-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>global-attribute-target-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>global-attribute-target</nonterminal>
        </expression>
        <expression>
          <terminal>:</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>global-attribute-target</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>assembly</terminal>
        </expression>
        <expression>
          <terminal>module</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>attributes</nonterminal>
    <expression>
      <nonterminal>attribute-sections</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-sections</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>attribute-section</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>attribute-sections</nonterminal>
            </expression>
            <expression>
              <nonterminal>attribute-section</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-section</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attribute-target-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>attribute-list</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>attribute-target-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>attribute-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-target-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>attribute-target</nonterminal>
        </expression>
        <expression>
          <terminal>:</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-target</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>field</terminal>
        </expression>
        <expression>
          <terminal>event</terminal>
        </expression>
        <expression>
          <terminal>method</terminal>
        </expression>
        <expression>
          <terminal>param</terminal>
        </expression>
        <expression>
          <terminal>property</terminal>
        </expression>
        <expression>
          <terminal>return</terminal>
        </expression>
        <expression>
          <nonterminal>type</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>attribute</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>attribute-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>attribute</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>attribute</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>attribute-name</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>attribute-arguments</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-name</nonterminal>
    <expression>
      <nonterminal>type-name</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-arguments</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>positional-argument-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>positional-argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>named-argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>named-argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>positional-argument-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>positional-argument</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>positional-argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>positional-argument</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>positional-argument</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>argument-name</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>attribute-argument-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>named-argument-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>named-argument</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>named-argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>named-argument</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>named-argument</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>attribute-argument-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>attribute-argument-expression</nonterminal>
    <expression>
      <nonterminal>expression</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>keyword</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>abstract</terminal>
        </expression>
        <expression>
          <terminal>as</terminal>
        </expression>
        <expression>
          <terminal>base</terminal>
        </expression>
        <expression>
          <terminal>bool</terminal>
        </expression>
        <expression>
          <terminal>break</terminal>
        </expression>
        <expression>
          <terminal>byte</terminal>
        </expression>
        <expression>
          <terminal>case</terminal>
        </expression>
        <expression>
          <terminal>catch</terminal>
        </expression>
        <expression>
          <terminal>char</terminal>
        </expression>
        <expression>
          <terminal>checked</terminal>
        </expression>
        <expression>
          <terminal>class</terminal>
        </expression>
        <expression>
          <terminal>const</terminal>
        </expression>
        <expression>
          <terminal>continue</terminal>
        </expression>
        <expression>
          <terminal>decimal</terminal>
        </expression>
        <expression>
          <terminal>default</terminal>
        </expression>
        <expression>
          <terminal>delegate</terminal>
        </expression>
        <expression>
          <terminal>do</terminal>
        </expression>
        <expression>
          <terminal>double</terminal>
        </expression>
        <expression>
          <terminal>else</terminal>
        </expression>
        <expression>
          <terminal>enum</terminal>
        </expression>
        <expression>
          <terminal>event</terminal>
        </expression>
        <expression>
          <terminal>explicit</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
        <expression>
          <terminal>false</terminal>
        </expression>
        <expression>
          <terminal>finally</terminal>
        </expression>
        <expression>
          <terminal>fixed</terminal>
        </expression>
        <expression>
          <terminal>float</terminal>
        </expression>
        <expression>
          <terminal>for</terminal>
        </expression>
        <expression>
          <terminal>foreach</terminal>
        </expression>
        <expression>
          <terminal>goto</terminal>
        </expression>
        <expression>
          <terminal>if</terminal>
        </expression>
        <expression>
          <terminal>implicit</terminal>
        </expression>
        <expression>
          <terminal>in</terminal>
        </expression>
        <expression>
          <terminal>int</terminal>
        </expression>
        <expression>
          <terminal>interface</terminal>
        </expression>
        <expression>
          <terminal>internal</terminal>
        </expression>
        <expression>
          <terminal>is</terminal>
        </expression>
        <expression>
          <terminal>lock</terminal>
        </expression>
        <expression>
          <terminal>long</terminal>
        </expression>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>null</terminal>
        </expression>
        <expression>
          <terminal>object</terminal>
        </expression>
        <expression>
          <terminal>operator</terminal>
        </expression>
        <expression>
          <terminal>out</terminal>
        </expression>
        <expression>
          <terminal>override</terminal>
        </expression>
        <expression>
          <terminal>params</terminal>
        </expression>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
        <expression>
          <terminal>readonly</terminal>
        </expression>
        <expression>
          <terminal>ref</terminal>
        </expression>
        <expression>
          <terminal>return</terminal>
        </expression>
        <expression>
          <terminal>sbyte</terminal>
        </expression>
        <expression>
          <terminal>sealed</terminal>
        </expression>
        <expression>
          <terminal>short</terminal>
        </expression>
        <expression>
          <terminal>sizeof</terminal>
        </expression>
        <expression>
          <terminal>stackalloc</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>string</terminal>
        </expression>
        <expression>
          <terminal>struct</terminal>
        </expression>
        <expression>
          <terminal>switch</terminal>
        </expression>
        <expression>
          <terminal>this</terminal>
        </expression>
        <expression>
          <terminal>throw</terminal>
        </expression>
        <expression>
          <terminal>true</terminal>
        </expression>
        <expression>
          <terminal>try</terminal>
        </expression>
        <expression>
          <terminal>typeof</terminal>
        </expression>
        <expression>
          <terminal>uint</terminal>
        </expression>
        <expression>
          <terminal>ulong</terminal>
        </expression>
        <expression>
          <terminal>unchecked</terminal>
        </expression>
        <expression>
          <terminal>unsafe</terminal>
        </expression>
        <expression>
          <terminal>ushort</terminal>
        </expression>
        <expression>
          <terminal>using</terminal>
        </expression>
        <expression>
          <terminal>virtual</terminal>
        </expression>
        <expression>
          <terminal>void</terminal>
        </expression>
        <expression>
          <terminal>volatile</terminal>
        </expression>
        <expression>
          <terminal>while</terminal>
        </expression>
        <expression>
          <terminal>group</terminal>
        </expression>
        <expression>
          <terminal>by</terminal>
        </expression>
        <expression>
          <terminal>join</terminal>
        </expression>
        <expression>
          <terminal>on</terminal>
        </expression>
        <expression>
          <terminal>equals</terminal>
        </expression>
        <expression>
          <terminal>into</terminal>
        </expression>
        <expression>
          <terminal>let</terminal>
        </expression>
        <expression>
          <terminal>get</terminal>
        </expression>
        <expression>
          <terminal>set</terminal>
        </expression>
        <expression>
          <terminal>yield</terminal>
        </expression>
        <expression>
          <terminal>partial</terminal>
        </expression>
        <expression>
          <terminal>var</terminal>
        </expression>
        <expression>
          <terminal>orderby</terminal>
        </expression>
        <expression>
          <terminal>add</terminal>
        </expression>
        <expression>
          <terminal>remove</terminal>
        </expression>
        <expression>
          <terminal>where</terminal>
        </expression>
        <expression>
          <terminal>from</terminal>
        </expression>
        <expression>
          <terminal>select</terminal>
        </expression>
        <expression>
          <terminal>ascending</terminal>
        </expression>
        <expression>
          <terminal>descending</terminal>
        </expression>
        <expression>
          <terminal>alias</terminal>
        </expression>
        <expression>
          <terminal>field</terminal>
        </expression>
        <expression>
          <terminal>method</terminal>
        </expression>
        <expression>
          <terminal>param</terminal>
        </expression>
        <expression>
          <terminal>property</terminal>
        </expression>
        <expression>
          <terminal>dynamic</terminal>
        </expression>
        <expression>
          <terminal>assembly</terminal>
        </expression>
        <expression>
          <terminal>module</terminal>
        </expression>
      </choice>
    </expression>
  </production>
</grammar>