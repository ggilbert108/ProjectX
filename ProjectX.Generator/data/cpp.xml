<?xml version="1.0" encoding="utf-8" ?>
<grammar>
  <production>
    <nonterminal>translation-unit</nonterminal>
    <expression>
      <optional>
        <expression>
          <nonterminal>declaration-seq</nonterminal>
        </expression>
      </optional>
    </expression>
  </production>
  <production>
    <nonterminal>declaration-seq</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>declaration-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>block-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>function-definition</nonterminal>
        </expression>
        <expression>
          <nonterminal>template-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>explicit-instantiation</nonterminal>
        </expression>
        <expression>
          <nonterminal>explicit-specialization</nonterminal>
        </expression>
        <expression>
          <nonterminal>linkage-specification</nonterminal>
        </expression>
        <expression>
          <nonterminal>namespace-definition</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>block-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>simple-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>asm-definition</nonterminal>
        </expression>
        <expression>
          <nonterminal>namespace-alias-definition</nonterminal>
        </expression>
        <expression>
          <nonterminal>using-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>using-directive</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>simple-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>decl-specifier-seq</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>init-declarator-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>decl-specifier-seq</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>decl-specifier-seq</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>decl-specifier</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>decl-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>storage-class-specifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-specifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>function-specifier</nonterminal>
        </expression>
        <expression>
          <terminal>friend</terminal>
        </expression>
        <expression>
          <terminal>typedef</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>storage-class-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>auto</terminal>
        </expression>
        <expression>
          <terminal>register</terminal>
        </expression>
        <expression>
          <terminal>static</terminal>
        </expression>
        <expression>
          <terminal>extern</terminal>
        </expression>
        <expression>
          <terminal>mutable</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>simple-type-specifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>class-specifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>enum-specifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>elaborated-type-specifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>cv-qualifier</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>simple-type-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <terminal>template</terminal>
            </expression>
            <expression>
              <nonterminal>template-id</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <terminal>char</terminal>
        </expression>
        <expression>
          <terminal>wchar_t</terminal>
        </expression>
        <expression>
          <terminal>bool</terminal>
        </expression>
        <expression>
          <terminal>short</terminal>
        </expression>
        <expression>
          <terminal>int</terminal>
        </expression>
        <expression>
          <terminal>long</terminal>
        </expression>
        <expression>
          <terminal>signed</terminal>
        </expression>
        <expression>
          <terminal>unsigned</terminal>
        </expression>
        <expression>
          <terminal>float</terminal>
        </expression>
        <expression>
          <terminal>double</terminal>
        </expression>
        <expression>
          <terminal>void</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>nested-name-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-or-namespace-name</nonterminal>
            </expression>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-or-namespace-name</nonterminal>
            </expression>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <terminal>template</terminal>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-or-namespace-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>namespace-name</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>template-id</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>template-id</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>template-name</nonterminal>
        </expression>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>template-argument-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>template-name</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>template-argument-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>template-argument</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>template-argument-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>template-argument</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>template-argument</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>assignment-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>type-id</nonterminal>
        </expression>
        <expression>
          <nonterminal>id-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>assignment-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>conditional-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>logical-or-expression</nonterminal>
            </expression>
            <expression>
              <nonterminal>assignment-operator</nonterminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>throw-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>conditional-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>logical-or-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>logical-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>?</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>logical-or-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>logical-and-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>logical-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>||</terminal>
            </expression>
            <expression>
              <nonterminal>logical-and-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>logical-and-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>inclusive-or-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>logical-and-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&amp;&amp;</terminal>
            </expression>
            <expression>
              <nonterminal>inclusive-or-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>inclusive-or-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>exclusive-or-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>inclusive-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>|</terminal>
            </expression>
            <expression>
              <nonterminal>exclusive-or-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>exclusive-or-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>and-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>exclusive-or-expression</nonterminal>
            </expression>
            <expression>
              <terminal>^</terminal>
            </expression>
            <expression>
              <nonterminal>and-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>and-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>equality-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>and-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&amp;</terminal>
            </expression>
            <expression>
              <nonterminal>equality-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>equality-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>relational-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>equality-expression</nonterminal>
            </expression>
            <expression>
              <terminal>==</terminal>
            </expression>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>equality-expression</nonterminal>
            </expression>
            <expression>
              <terminal>!=</terminal>
            </expression>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>relational-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>shift-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&lt;=</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>relational-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;=</terminal>
            </expression>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>shift-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>additive-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&lt;&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>shift-expression</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;&gt;</terminal>
            </expression>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>additive-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>multiplicative-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
            <expression>
              <terminal>+</terminal>
            </expression>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>additive-expression</nonterminal>
            </expression>
            <expression>
              <terminal>-</terminal>
            </expression>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>multiplicative-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>pm-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
            <expression>
              <terminal>*</terminal>
            </expression>
            <expression>
              <nonterminal>pm-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
            <expression>
              <terminal>/</terminal>
            </expression>
            <expression>
              <nonterminal>pm-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>multiplicative-expression</nonterminal>
            </expression>
            <expression>
              <terminal>%</terminal>
            </expression>
            <expression>
              <nonterminal>pm-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>pm-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>cast-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>pm-expression</nonterminal>
            </expression>
            <expression>
              <terminal>.*</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>pm-expression</nonterminal>
            </expression>
            <expression>
              <terminal>-&gt;*</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>cast-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>unary-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>unary-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>postfix-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>++</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>--</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>unary-operator</nonterminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>sizeof</terminal>
            </expression>
            <expression>
              <nonterminal>unary-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>sizeof</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>new-expression</nonterminal>
        </expression>
        <expression>
          <nonterminal>delete-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>postfix-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>primary-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>expression-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>simple-type-specifier</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>expression-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typename</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>expression-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typename</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>template</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>template-id</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>expression-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>template</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>id-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>-&gt;</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>template</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>id-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>.</terminal>
            </expression>
            <expression>
              <nonterminal>pseudo-destructor-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>-&gt;</terminal>
            </expression>
            <expression>
              <nonterminal>pseudo-destructor-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>++</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>postfix-expression</nonterminal>
            </expression>
            <expression>
              <terminal>--</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>dynamic_cast</terminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>static_cast</terminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>reinterpret_cast</terminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>const_cast</terminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typeid</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typeid</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>primary-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>literal</nonterminal>
        </expression>
        <expression>
          <terminal>this</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>id-expression</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>assignment-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>id-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>unqualified-id</nonterminal>
        </expression>
        <expression>
          <nonterminal>qualified-id</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>unqualified-id</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <nonterminal>operator-function-id</nonterminal>
        </expression>
        <expression>
          <nonterminal>conversion-function-id</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>~</terminal>
            </expression>
            <expression>
              <nonterminal>class-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>template-id</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>operator-function-id</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>operator</terminal>
        </expression>
        <expression>
          <nonterminal>operator</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>new</terminal>
        </expression>
        <expression>
          <terminal>delete</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>delete</terminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <terminal>+</terminal>
        </expression>
        <expression>
          <terminal>-</terminal>
        </expression>
        <expression>
          <terminal>*</terminal>
        </expression>
        <expression>
          <terminal>/</terminal>
        </expression>
        <expression>
          <terminal>%</terminal>
        </expression>
        <expression>
          <terminal>^</terminal>
        </expression>
        <expression>
          <terminal>&amp;</terminal>
        </expression>
        <expression>
          <terminal>|</terminal>
        </expression>
        <expression>
          <terminal>~</terminal>
        </expression>
        <expression>
          <terminal>!</terminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
        <expression>
          <terminal>+=</terminal>
        </expression>
        <expression>
          <terminal>-=</terminal>
        </expression>
        <expression>
          <terminal>*=</terminal>
        </expression>
        <expression>
          <terminal>/=</terminal>
        </expression>
        <expression>
          <terminal>%=</terminal>
        </expression>
        <expression>
          <terminal>^=</terminal>
        </expression>
        <expression>
          <terminal>&amp;=</terminal>
        </expression>
        <expression>
          <terminal>|=</terminal>
        </expression>
        <expression>
          <terminal>&lt;&lt;</terminal>
        </expression>
        <expression>
          <terminal>&gt;&gt;</terminal>
        </expression>
        <expression>
          <terminal>&gt;&gt;=</terminal>
        </expression>
        <expression>
          <terminal>&lt;&lt;=</terminal>
        </expression>
        <expression>
          <terminal>==</terminal>
        </expression>
        <expression>
          <terminal>!=</terminal>
        </expression>
        <expression>
          <terminal>&lt;=</terminal>
        </expression>
        <expression>
          <terminal>&gt;=</terminal>
        </expression>
        <expression>
          <terminal>&amp;&amp;</terminal>
        </expression>
        <expression>
          <terminal>||</terminal>
        </expression>
        <expression>
          <terminal>++</terminal>
        </expression>
        <expression>
          <terminal>--</terminal>
        </expression>
        <expression>
          <terminal>,</terminal>
        </expression>
        <expression>
          <terminal>-&gt;*</terminal>
        </expression>
        <expression>
          <terminal>-&gt;</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>conversion-function-id</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>operator</terminal>
        </expression>
        <expression>
          <nonterminal>conversion-type-id</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>conversion-type-id</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>type-specifier-seq</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>conversion-declarator</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>type-specifier-seq</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>type-specifier</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type-specifier-seq</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>conversion-declarator</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>ptr-operator</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>conversion-declarator</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>ptr-operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>*</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>cv-qualifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <terminal>&amp;</terminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <terminal>*</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>cv-qualifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>cv-qualifier-seq</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>cv-qualifier</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>cv-qualifier-seq</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>cv-qualifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>const</terminal>
        </expression>
        <expression>
          <terminal>volatile</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>qualified-id</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>template</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>unqualified-id</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <nonterminal>operator-function-id</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <nonterminal>template-id</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>expression-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>assignment-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>pseudo-destructor-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-name</nonterminal>
            </expression>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <terminal>~</terminal>
            </expression>
            <expression>
              <nonterminal>type-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <terminal>template</terminal>
            </expression>
            <expression>
              <nonterminal>template-id</nonterminal>
            </expression>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <terminal>~</terminal>
            </expression>
            <expression>
              <nonterminal>type-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>~</terminal>
            </expression>
            <expression>
              <nonterminal>type-name</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>class-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>enum-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>typedef-name</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enum-name</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>typedef-name</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>type-id</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>type-specifier-seq</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>abstract-declarator</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>abstract-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>ptr-operator</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>abstract-declarator</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>direct-abstract-declarator</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>direct-abstract-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>direct-abstract-declarator</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>parameter-declaration-clause</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>cv-qualifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>exception-specification</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>direct-abstract-declarator</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>constant-expression</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>abstract-declarator</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>parameter-declaration-clause</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>parameter-declaration-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>...</terminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>parameter-declaration-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <terminal>...</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>parameter-declaration-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>parameter-declaration</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>parameter-declaration-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>parameter-declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>parameter-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>decl-specifier-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>decl-specifier-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>decl-specifier-seq</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>abstract-declarator</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>decl-specifier-seq</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>abstract-declarator</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>direct-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>ptr-operator</nonterminal>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>direct-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>declarator-id</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>direct-declarator</nonterminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>parameter-declaration-clause</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>cv-qualifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>exception-specification</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>direct-declarator</nonterminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>constant-expression</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>declarator-id</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>id-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>type-name</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>exception-specification</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>throw</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>type-id-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>type-id-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type-id</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-id-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>constant-expression</nonterminal>
    <expression>
      <nonterminal>conditional-expression</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>unary-operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>*</terminal>
        </expression>
        <expression>
          <terminal>&amp;</terminal>
        </expression>
        <expression>
          <terminal>+</terminal>
        </expression>
        <expression>
          <terminal>-</terminal>
        </expression>
        <expression>
          <terminal>!</terminal>
        </expression>
        <expression>
          <terminal>~</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>new-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>new-placement</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>new-type-id</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>new-initializer</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>new</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>new-placement</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>new-initializer</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>new-placement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>expression-list</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>new-type-id</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>type-specifier-seq</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>new-declarator</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>new-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>ptr-operator</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>new-declarator</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>direct-new-declarator</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>direct-new-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>direct-new-declarator</nonterminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>new-initializer</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>delete-expression</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>delete</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>delete</terminal>
            </expression>
            <expression>
              <terminal>[</terminal>
            </expression>
            <expression>
              <terminal>]</terminal>
            </expression>
            <expression>
              <nonterminal>cast-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>assignment-operator</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <terminal>*=</terminal>
        </expression>
        <expression>
          <terminal>/=</terminal>
        </expression>
        <expression>
          <terminal>%=</terminal>
        </expression>
        <expression>
          <terminal>+=</terminal>
        </expression>
        <expression>
          <terminal>-=</terminal>
        </expression>
        <expression>
          <terminal>&gt;&gt;=</terminal>
        </expression>
        <expression>
          <terminal>&lt;&lt;=</terminal>
        </expression>
        <expression>
          <terminal>&amp;=</terminal>
        </expression>
        <expression>
          <terminal>^=</terminal>
        </expression>
        <expression>
          <terminal>|=</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>throw-expression</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>throw</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-name</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>original-namespace-name</nonterminal>
        </expression>
        <expression>
          <nonterminal>namespace-alias</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>original-namespace-name</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-alias</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>class-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>class-head</nonterminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>member-specification</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>class-head</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-key</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>base-clause</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-key</nonterminal>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>base-clause</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-key</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>template-id</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>base-clause</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>class-key</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>class</terminal>
        </expression>
        <expression>
          <terminal>struct</terminal>
        </expression>
        <expression>
          <terminal>union</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>base-clause</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>base-specifier-list</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>base-specifier-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>base-specifier</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>base-specifier-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>base-specifier</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>base-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>class-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>virtual</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>access-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>class-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>access-specifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>virtual</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>class-name</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>access-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>private</terminal>
        </expression>
        <expression>
          <terminal>protected</terminal>
        </expression>
        <expression>
          <terminal>public</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-specification</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>member-declaration</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>member-specification</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>access-specifier</nonterminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>member-specification</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>decl-specifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>member-declarator-list</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>function-definition</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>;</terminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>template</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>unqualified-id</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>using-declaration</nonterminal>
        </expression>
        <expression>
          <nonterminal>template-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-declarator-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>member-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>member-declarator-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>member-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>member-declarator</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>pure-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>constant-initializer</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>pure-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <terminal>0</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>constant-initializer</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>constant-expression</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>function-definition</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>decl-specifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>ctor-initializer</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>function-body</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <nonterminal>decl-specifier-seq</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <nonterminal>function-try-block</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>ctor-initializer</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>:</terminal>
        </expression>
        <expression>
          <nonterminal>mem-initializer-list</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>mem-initializer-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>mem-initializer</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>mem-initializer</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>mem-initializer-list</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>mem-initializer</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>mem-initializer-id</nonterminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>mem-initializer-id</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>class-name</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>function-body</nonterminal>
    <expression>
      <nonterminal>compound-statement</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>compound-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>statement-seq</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>statement-seq</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>statement</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>statement-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>labeled-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>expression-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>compound-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>selection-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>iteration-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>jump-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>declaration-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>try-block</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>labeled-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>case</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>default</terminal>
            </expression>
            <expression>
              <terminal>:</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>expression-statement</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>selection-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>if</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>condition</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>if</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>condition</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
            <expression>
              <terminal>else</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>switch</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>condition</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>condition</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-specifier-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>assignment-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>iteration-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>while</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>condition</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>do</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
            <expression>
              <terminal>while</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>for</terminal>
            </expression>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>for-init-statement</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>condition</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>expression</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
            <expression>
              <nonterminal>statement</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>for-init-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>expression-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>simple-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>jump-statement</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>break</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>continue</terminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>return</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>expression</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>goto</terminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>declaration-statement</nonterminal>
    <expression>
      <nonterminal>block-declaration</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>try-block</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>try</terminal>
        </expression>
        <expression>
          <nonterminal>compound-statement</nonterminal>
        </expression>
        <expression>
          <nonterminal>handler-seq</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>handler-seq</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>handler</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>handler-seq</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>handler</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>catch</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>exception-declaration</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <nonterminal>compound-statement</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>exception-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-specifier-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>type-specifier-seq</nonterminal>
            </expression>
            <expression>
              <nonterminal>abstract-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <nonterminal>type-specifier-seq</nonterminal>
        </expression>
        <expression>
          <terminal>...</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>function-try-block</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>try</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>ctor-initializer</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>function-body</nonterminal>
        </expression>
        <expression>
          <nonterminal>handler-seq</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>using-declaration</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>using</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>typename</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>unqualified-id</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>using</terminal>
            </expression>
            <expression>
              <terminal>::</terminal>
            </expression>
            <expression>
              <nonterminal>unqualified-id</nonterminal>
            </expression>
            <expression>
              <terminal>;</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>template-declaration</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <terminal>export</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>template</terminal>
        </expression>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <nonterminal>template-parameter-list</nonterminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
        <expression>
          <nonterminal>declaration</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>template-parameter-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>template-parameter</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>template-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>template-parameter</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>template-parameter</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>type-parameter</nonterminal>
        </expression>
        <expression>
          <nonterminal>parameter-declaration</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>type-parameter</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>class</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>class</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typename</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typename</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>type-id</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>template</terminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>template-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <terminal>class</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>template</terminal>
            </expression>
            <expression>
              <terminal>&lt;</terminal>
            </expression>
            <expression>
              <nonterminal>template-parameter-list</nonterminal>
            </expression>
            <expression>
              <terminal>&gt;</terminal>
            </expression>
            <expression>
              <terminal>class</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>identifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>id-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enum-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>enum</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>enumerator-list</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>enumerator-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>enumerator-definition</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>enumerator-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>enumerator-definition</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enumerator-definition</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>enumerator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>enumerator</nonterminal>
            </expression>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>constant-expression</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>enumerator</nonterminal>
    <expression>
      <nonterminal>identifier</nonterminal>
    </expression>
  </production>
  <production>
    <nonterminal>elaborated-type-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <nonterminal>class-key</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>enum</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>nested-name-specifier</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typename</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <nonterminal>identifier</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>typename</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>::</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>template</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <nonterminal>template-id</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>function-specifier</nonterminal>
    <expression>
      <choice>
        <expression>
          <terminal>inline</terminal>
        </expression>
        <expression>
          <terminal>virtual</terminal>
        </expression>
        <expression>
          <terminal>explicit</terminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>init-declarator-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>init-declarator</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>init-declarator-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>init-declarator</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>init-declarator</nonterminal>
    <expression>
      <sequence>
        <expression>
          <nonterminal>declarator</nonterminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>initializer</nonterminal>
            </expression>
          </optional>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>initializer</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>=</terminal>
            </expression>
            <expression>
              <nonterminal>initializer-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>(</terminal>
            </expression>
            <expression>
              <nonterminal>expression-list</nonterminal>
            </expression>
            <expression>
              <terminal>)</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>initializer-clause</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>assignment-expression</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <nonterminal>initializer-list</nonterminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <terminal>,</terminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>initializer-list</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>initializer-clause</nonterminal>
        </expression>
        <expression>
          <sequence>
            <expression>
              <nonterminal>initializer-list</nonterminal>
            </expression>
            <expression>
              <terminal>,</terminal>
            </expression>
            <expression>
              <nonterminal>initializer-clause</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>asm-definition</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>asm</terminal>
        </expression>
        <expression>
          <terminal>(</terminal>
        </expression>
        <expression>
          <nonterminal>string-literal</nonterminal>
        </expression>
        <expression>
          <terminal>)</terminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-alias-definition</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>=</terminal>
        </expression>
        <expression>
          <nonterminal>qualified-namespace-specifier</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>qualified-namespace-specifier</nonterminal>
    <expression>
      <sequence>
        <expression>
          <optional>
            <expression>
              <terminal>::</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>namespace-name</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>using-directive</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>using</terminal>
        </expression>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <optional>
            <expression>
              <terminal>::</terminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <optional>
            <expression>
              <nonterminal>nested-name-specifier</nonterminal>
            </expression>
          </optional>
        </expression>
        <expression>
          <nonterminal>namespace-name</nonterminal>
        </expression>
        <expression>
          <terminal>;</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>explicit-instantiation</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>template</terminal>
        </expression>
        <expression>
          <nonterminal>declaration</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>explicit-specialization</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>template</terminal>
        </expression>
        <expression>
          <terminal>&lt;</terminal>
        </expression>
        <expression>
          <terminal>&gt;</terminal>
        </expression>
        <expression>
          <nonterminal>declaration</nonterminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>linkage-specification</nonterminal>
    <expression>
      <choice>
        <expression>
          <sequence>
            <expression>
              <terminal>extern</terminal>
            </expression>
            <expression>
              <nonterminal>string-literal</nonterminal>
            </expression>
            <expression>
              <terminal>{</terminal>
            </expression>
            <expression>
              <optional>
                <expression>
                  <nonterminal>declaration-seq</nonterminal>
                </expression>
              </optional>
            </expression>
            <expression>
              <terminal>}</terminal>
            </expression>
          </sequence>
        </expression>
        <expression>
          <sequence>
            <expression>
              <terminal>extern</terminal>
            </expression>
            <expression>
              <nonterminal>string-literal</nonterminal>
            </expression>
            <expression>
              <nonterminal>declaration</nonterminal>
            </expression>
          </sequence>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-definition</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>named-namespace-definition</nonterminal>
        </expression>
        <expression>
          <nonterminal>unnamed-namespace-definition</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>named-namespace-definition</nonterminal>
    <expression>
      <choice>
        <expression>
          <nonterminal>original-namespace-definition</nonterminal>
        </expression>
        <expression>
          <nonterminal>extension-namespace-definition</nonterminal>
        </expression>
      </choice>
    </expression>
  </production>
  <production>
    <nonterminal>original-namespace-definition</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <nonterminal>identifier</nonterminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>namespace-body</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>namespace-body</nonterminal>
    <expression>
      <optional>
        <expression>
          <nonterminal>declaration-seq</nonterminal>
        </expression>
      </optional>
    </expression>
  </production>
  <production>
    <nonterminal>extension-namespace-definition</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <nonterminal>original-namespace-name</nonterminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>namespace-body</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
  <production>
    <nonterminal>unnamed-namespace-definition</nonterminal>
    <expression>
      <sequence>
        <expression>
          <terminal>namespace</terminal>
        </expression>
        <expression>
          <terminal>{</terminal>
        </expression>
        <expression>
          <nonterminal>namespace-body</nonterminal>
        </expression>
        <expression>
          <terminal>}</terminal>
        </expression>
      </sequence>
    </expression>
  </production>
</grammar>